<?xml version="1.0"?>
<!--
  kissy 构建文件，开启每个组件的构建
  @author lifesinger@gmail.com , yiminghe@gmail.com
-->
<project name="kissy-project-build" xmlns:ac="antlib:net.sf.antcontrib">
    <description>KISSY Project Build File</description>

    <property name="component.name" value="kissy"/>

    <import file="common.xml"/>

    <property name="git.origin" value="origin"/>
    <property name="git.remote" value="remote"/>
    <property name="git.gh-pages" value="gh-pages"/>
    <property name="git.master" value="master"/>
    <property name="git.dev" value="dev"/>


    <target name="build-seed">
        <!--
        build seed first，刷新 seed 的时间戳到最新
        seed 的时间戳也代表 kissy 的时间戳
        -->
        <delete>
            <!--每次都要重新 build seed-->
            <fileset dir="${kissy.build.dir}" includes="seed*.js"/>
        </delete>
        <ant dir="${kissy.src.dir}/seed/" inheritall="false"/>
    </target>

    <target name="concat" depends="build-seed">
        <!-- kissy: seed + core, 独立单文件 -->
        <concat destfile="${component.src.dir.tmp}/kissy-pkg.js"
                encoding="${charset}" outputencoding="${charset}">
            <header filtering="no" trimleading="yes">${bom}</header>
            <path path="${kissy.build.dir}/seed.js"/>
            <fileset dir="${kissy.build.dir}/dom/"
                     includes="**/*.js" excludes="**/*-min.js"/>
            <fileset dir="${kissy.build.dir}/event/"
                     includes="**/*.js" excludes="**/*-min.js"/>
            <path path="${kissy.build.dir}/json.js"/>
            <path path="${kissy.build.dir}/io.js"/>
            <path path="${kissy.build.dir}/cookie.js"/>
            <path path="${kissy.build.dir}/base.js"/>
            <fileset dir="${kissy.build.dir}/anim/"
                     includes="**/*.js" excludes="**/*-min.js"/>
            <path path="${kissy.build.dir}/node.js"/>
            <footer filtering="no" trimleading="yes">
                KISSY.use("ua,dom,event,node,json,io,anim,base,cookie",0,1);
            </footer>
            <filterchain>
                <deletecharacters chars="${bom}"/>
            </filterchain>
        </concat>
    </target>

    <target name="extract-dependency"/>

    <target name="build-core" depends="common-build.build">
    </target>

    <!--
      全部构建
    -->
    <target name="build-all">
        <!--
        各个组件构建
        // https://issues.apache.org/bugzilla/show_bug.cgi?id=33061 oom
        -->
        <subant target="" failonerror="true" inheritall="false">
            <fileset dir="${kissy.src.dir}" includes="*/build.xml"/>
        </subant>
        <subant target="build-core" buildpath="."
                inheritall="false" inheritrefs="false"/>
    </target>

    <!--
    push to branches
    -->
    <target name="sync">
        <input addproperty="git.commit.message">
            git commit message :
        </input>
        <ac:if>

            <ac:not>
                <equals arg1="${git.commit.message}" arg2="">
                </equals>
            </ac:not>

            <ac:then>

                <exec executable="cmd"
                      failonerror="true">
                    <arg line="/c git add ."/>
                </exec>
                <exec executable="cmd" failonerror="true">
                    <arg line="/c git commit -am '${git.commit.message}'"/>
                </exec>

            </ac:then>
        </ac:if>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.origin} ${git.dev}:${git.dev}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.origin} ${git.dev}:${git.master}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.origin} ${git.dev}:${git.gh-pages}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.remote} ${git.dev}:${git.dev}"/>
        </exec>

        <!--push master to gh-pages also-->
        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.remote} ${git.dev}:${git.master}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.remote} ${git.dev}:${git.gh-pages}"/>
        </exec>

    </target>


    <target name="sync-dev">
        <input addproperty="git.commit.message">
            git commit message :
        </input>
        <ac:if>

            <ac:not>
                <equals arg1="${git.commit.message}" arg2="">
                </equals>
            </ac:not>

            <ac:then>

                <exec executable="cmd"
                      failonerror="true">
                    <arg line="/c git add ."/>
                </exec>
                <exec executable="cmd" failonerror="true">
                    <arg line="/c git commit -am '${git.commit.message}'"/>
                </exec>

            </ac:then>
        </ac:if>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.origin} ${git.dev}:${git.dev}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.remote} ${git.dev}:${git.dev}"/>
        </exec>

    </target>

    <target name="clean">
        <delete dir="${kissy.build.dir}"/>
    </target>

</project>
